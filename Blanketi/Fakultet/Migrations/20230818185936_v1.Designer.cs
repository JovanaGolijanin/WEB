// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(FakultetContext))]
    [Migration("20230818185936_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.IspitniRok", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("IspitniRok");
                });

            modelBuilder.Entity("Models.Predmet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("IspitniRokoviID")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int?>("PredmetiID")
                        .HasColumnType("int");

                    b.Property<int?>("StudentiID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IspitniRokoviID");

                    b.HasIndex("PredmetiID");

                    b.HasIndex("StudentiID");

                    b.ToTable("Spoj");
                });

            modelBuilder.Entity("Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.HasOne("Models.IspitniRok", "IspitniRokovi")
                        .WithMany("StudentiPredmeti")
                        .HasForeignKey("IspitniRokoviID");

                    b.HasOne("Models.Predmet", "Predmeti")
                        .WithMany("PredmetStudent")
                        .HasForeignKey("PredmetiID");

                    b.HasOne("Models.Student", "Studenti")
                        .WithMany("StudentPredmet")
                        .HasForeignKey("StudentiID");

                    b.Navigation("IspitniRokovi");

                    b.Navigation("Predmeti");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Models.IspitniRok", b =>
                {
                    b.Navigation("StudentiPredmeti");
                });

            modelBuilder.Entity("Models.Predmet", b =>
                {
                    b.Navigation("PredmetStudent");
                });

            modelBuilder.Entity("Models.Student", b =>
                {
                    b.Navigation("StudentPredmet");
                });
#pragma warning restore 612, 618
        }
    }
}
