// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Stadion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumOtvaranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Stadion");
                });

            modelBuilder.Entity("Models.Tim", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("URLSlike")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tim");
                });

            modelBuilder.Entity("Models.Utakmica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojPosetilaca")
                        .HasColumnType("int");

                    b.Property<int>("DrugiRezultat")
                        .HasColumnType("int");

                    b.Property<int?>("DrugiTimID")
                        .HasColumnType("int");

                    b.Property<int>("PrviRezultat")
                        .HasColumnType("int");

                    b.Property<int?>("PrviTimID")
                        .HasColumnType("int");

                    b.Property<int?>("StadionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DrugiTimID");

                    b.HasIndex("PrviTimID");

                    b.HasIndex("StadionID");

                    b.ToTable("Utakmica");
                });

            modelBuilder.Entity("Models.Utakmica", b =>
                {
                    b.HasOne("Models.Tim", "DrugiTim")
                        .WithMany("UtakmiceDrugogTima")
                        .HasForeignKey("DrugiTimID");

                    b.HasOne("Models.Tim", "PrviTim")
                        .WithMany("UtakmicePrvogTima")
                        .HasForeignKey("PrviTimID");

                    b.HasOne("Models.Stadion", "Stadion")
                        .WithMany("Utakmice")
                        .HasForeignKey("StadionID");

                    b.Navigation("DrugiTim");

                    b.Navigation("PrviTim");

                    b.Navigation("Stadion");
                });

            modelBuilder.Entity("Models.Stadion", b =>
                {
                    b.Navigation("Utakmice");
                });

            modelBuilder.Entity("Models.Tim", b =>
                {
                    b.Navigation("UtakmiceDrugogTima");

                    b.Navigation("UtakmicePrvogTima");
                });
#pragma warning restore 612, 618
        }
    }
}
